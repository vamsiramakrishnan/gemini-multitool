@import '../../styles/shared/mixins';
@import '../../styles/shared/layout-mixins';

.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 42px;
  height: 42px;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: var(--text-primary);
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, rgba(255,255,255,0.1) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  &:hover::after {
    opacity: 1;
  }
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-lg);
  }
  
  &:active {
    background: rgba(255, 255, 255, 0.25);
    transform: translateY(0);
  }
  
  &.connected {
    background: rgba(var(--primary-rgb), 0.15);
    border-color: rgba(var(--primary-rgb), 0.3);
    color: var(--primary-500);
    box-shadow: 0 2px 12px rgba(var(--primary-rgb), 0.15);
    
    &:hover {
      background: rgba(var(--primary-rgb), 0.2);
      box-shadow: 0 4px 16px rgba(var(--primary-rgb), 0.2);
    }
  }

  &.error {
    background: rgba(var(--error-rgb), 0.1);
    border-color: rgba(var(--error-rgb), 0.3);
    color: var(--error-500);
    animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
  }

  &.loading {
    pointer-events: none;
    position: relative;
    
    .loading-indicator {
      position: absolute;
      inset: 4px;
      border: 2px solid rgba(var(--primary-rgb), 0.1);
      border-top-color: var(--primary-500);
      border-radius: 50%;
      animation: spin 1.2s cubic-bezier(0.4, 0, 0.2, 1) infinite;
    }
  }
  
  &.active {
    background: rgba(var(--primary-rgb), 0.15);
    border-color: rgba(var(--primary-rgb), 0.3);
    color: var(--primary-500);
    box-shadow: 0 2px 12px rgba(var(--primary-rgb), 0.15);
    animation: pulse 2s infinite;
  }
  
  .material-symbols-outlined {
    font-size: 24px;
    transition: transform 0.2s ease;

    &:hover {
      transform: scale(1.1);
    }
  }
}

@property --volume {
  syntax: "<length>";
  inherit: false;
  initial-value: 0px;
}

.disabled .mic-button,
.mic-button.disabled {
  opacity: 0.5;
  pointer-events: none;
}

.mic-button {
  &.muted {
    background: rgba(var(--error-rgb), 0.1);
    border-color: rgba(var(--error-rgb), 0.3);
    color: var(--error-500);
    
    &:hover {
      background: rgba(var(--error-rgb), 0.15);
    }
  }
}

.connect-toggle {
  width: auto;
  padding: 12px 16px;
  font-weight: 600;
  height: 48px;
  border-radius: 16px;
  /* Default state (not connected) */
  background: var(--primary-100); /* Lighter shade for base */
  border-color: var(--primary-300); /* Slightly darker border */
  color: var(--primary-600);     /* Darker text for contrast */
  order: -1;
  transition: all 0.3s ease; /* Smooth transitions */

    &:hover {
      background: var(--primary-200); /* Slightly darker on hover */
      box-shadow: 0 4px 16px rgba(var(--primary-rgb), 0.2); /* More pronounced shadow */
      transform: translateY(-2px); /* Slight lift */
    }

    &:focus {
      outline: 2px solid var(--primary-400); /* Clear focus ring */
      outline-offset: 2px;
    }

    &:active {
      background: var(--primary-300); /* Even darker on press */
      transform: translateY(0); /* Reset lift */
      box-shadow: 0 2px 8px rgba(var(--primary-rgb), 0.15); /* Smaller shadow */
    }

  &.connected {
    /* Connected state */
    background: rgba(var(--error-rgb), 0.1);
    border-color: rgba(var(--error-rgb), 0.3);
    color: var(--error-500);

    &:hover {
      background: rgba(var(--error-rgb), 0.15);
      box-shadow: 0 4px 16px rgba(var(--error-rgb), 0.2); /* More pronounced shadow */
      transform: translateY(-2px);
    }
    &:active {
      background: rgba(var(--error-rgb), 0.2); /* Even darker on press */
      transform: translateY(0);
      box-shadow: 0 2px 8px rgba(var(--error-rgb), 0.15);
    }
  }
    .loading-indicator {
      position: absolute;
      inset: 8px;
      border: 2px solid rgba(var(--primary-rgb), 0.1);
      border-top-color: var(--primary-500);
      border-radius: 50%;
      animation: spin 1.2s cubic-bezier(0.4, 0, 0.2, 1) infinite;
    }
}

.control-tray {
  position: relative;
  z-index: 100;
  backdrop-filter: blur(10px);
  background: var(--surface-1);
  border-radius: var(--radius-lg);
  padding: 12px 24px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  display: flex;
  align-items: center;
  gap: 16px;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  
  &.chat-visible {
    opacity: 0.85;
    pointer-events: none;
    filter: grayscale(0.3) blur(1px);
    transform: scale(0.98);
  }

  .controls-group {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: var(--space-xs);
    transition: all 0.3s ease;
    
    &.left {
      min-width: 200px;
      justify-content: flex-start;
      
      .action-button {
        margin-right: var(--space-xs);
        transform-origin: left center;
      }
    }
    
    &.center {
      flex: 2;
      justify-content: center;
      gap: var(--space-md);
      
      .action-button {
        margin: 0 var(--space-xxs);
        transform-origin: center;
      }
    }
    
    &.right {
      min-width: 200px;
      justify-content: flex-end;
      
      .action-button {
        margin-left: var(--space-xs);
        transform-origin: right center;
      }
    }
  }

  .connection-container {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    padding: var(--space-xxs) var(--space-xs);
    transition: transform 0.3s ease;

    &:hover {
      transform: translateY(-1px);
    }

    .text-indicator {
      font-family: var(--font-ui);
      color: $retro-blue;
      font-size: var(--font-size-sm);
      min-width: 80px;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      font-weight: 500;
      letter-spacing: 0.5px;
      text-shadow: 0 0 12px rgba($retro-blue, 0.25);
      opacity: 0.9;
      
      &:hover {
        opacity: 1;
        transform: scale(1.02);
      }
    }

    &.connected .text-indicator {
      color: $retro-green;
      text-shadow: 0 0 12px rgba($retro-green, 0.25);
    }
  }

  .actions-nav {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 4px 8px;
    flex: 1;
    transition: opacity 0.3s ease, filter 0.3s ease;

    &.disabled {
      opacity: 0.5;
      pointer-events: none;
      filter: grayscale(0.5);
    }
  }
}

@keyframes pulse {
  0%, 100% { box-shadow: 0 0 0 0 rgba(var(--primary-rgb), 0.4); }
  50% { box-shadow: 0 0 0 10px rgba(var(--primary-rgb), 0); }
}

@keyframes subtle-pulse {
  0% {
    box-shadow: 0 0 8px rgba(var(--primary-rgb), 0.2);
  }
  50% {
    box-shadow: 0 0 16px rgba(var(--primary-rgb), 0.3);
  }
  100% {
    box-shadow: 0 0 8px rgba(var(--primary-rgb), 0.2);
  }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes shake {
  10%, 90% { transform: translateX(-1px); }
  20%, 80% { transform: translateX(2px); }
  30%, 50%, 70% { transform: translateX(-3px); }
  40%, 60% { transform: translateX(3px); }
}

@media (max-width: 768px) {
  .control-tray {
    padding: 8px 16px;
    .action-button {
      width: 36px;
      height: 36px;
    }
    .actions-nav {
      flex-direction: column;
      align-items: stretch;
      gap: 8px;
    }
    .controls-group {
      width: 100%;
      justify-content: space-between;
    }
  }
}

@media (max-width: 1024px) and (min-width: 769px) {
  .control-tray {
    .controls-group {
      &.left, &.right {
        min-width: 160px;
      }
    }
    
    .actions-nav {
      gap: 10px;
    }
  }
}

.persistent-chat-layer {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 99;
  
  &.has-chat {
    pointer-events: auto;
  }
}

.error-message {
  background: rgba(var(--error-rgb), 0.1);
  color: var(--error-500);
  padding: var(--space-sm);
  border-radius: var(--radius-md);
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  animation: fadeIn 0.3s ease;

  &.error-active {
    background: var(--error-400);
    color: white;
  }
}
