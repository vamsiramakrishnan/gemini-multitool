.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 48px;
  height: 48px;
  border-radius: var(--radius-lg);
  background: var(--surface-2);
  border: 1px solid var(--surface-3);
  color: var(--text-secondary);
  font-size: var(--font-size-xl);
  transition: var(--transition-all);
  cursor: pointer;
  position: relative;
  overflow: hidden;

  &:after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, var(--primary-500), transparent);
    opacity: 0;
    transition: var(--transition-all);
  }

  &:hover {
    border-color: var(--primary-500);
    color: var(--text-primary);
    transform: translateY(-1px);
    
    &:after {
      opacity: 0.1;
    }
  }

  &:active {
    transform: translateY(1px);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--surface-0),
                0 0 0 4px var(--primary-500);
  }

  &.connected {
    background: var(--primary-900);
    color: var(--primary-400);
    border-color: var(--primary-700);

    &:hover {
      border-color: var(--primary-500);
      color: var(--primary-300);
    }
  }

  .material-symbols-outlined {
    font-size: 24px;
    transition: var(--transition-all);
  }

  &.disabled {
    background: var(--surface-1);
    border-color: var(--surface-2);
    color: var(--text-tertiary);
    cursor: not-allowed;
    
    &:hover {
      transform: none;
    }
  }
}

@property --volume {
  syntax: "length";
  inherit: false;
  initial-value: 0px;
}

.disabled .mic-button,
.mic-button.disabled {
  &:before {
    background: rgba(0, 0, 0, 0);
  }
}

.mic-button {
  background: var(--error-500);
  color: var(--error-50);
  border: none;
  position: relative;

  &:before {
    content: '';
    position: absolute;
    inset: -4px;
    background: var(--error-500);
    opacity: 0;
    border-radius: inherit;
    transition: var(--transition-all);
  }

  &:hover {
    background: var(--error-400);
    
    &:before {
      opacity: 0.2;
      inset: -8px;
    }
  }

  &.active {
    animation: pulse 2s infinite;
  }
}

.connect-toggle {
  &:focus {
    border: 2px solid var(--Neutral-20);
    outline: 2px solid var(--Neutral-80);
  }

  &:not(.connected) {
    background-color: var(--Blue-500);
    color: var(--Neutral-5);
  }
}

.control-tray {
  position: fixed;
  bottom: var(--radius-xl);
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: var(--radius-md);
  padding: var(--radius-md);
  background: var(--surface-1);
  border: 1px solid var(--surface-3);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-lg);
  backdrop-filter: blur(8px);

  .disabled .action-button,
  .action-button.disabled {
    background: rgba(0, 0, 0, 0);
    border: 1px solid var(--Neutral-30, #404547);
    color: var(--Neutral-30);
  }

  .connection-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--radius-sm);

    .connection-button-container {
      border-radius: 27px;
      border: 1px solid var(--Neutral-30);
      background: var(--Neutral-5);
      padding: 10px;
    }

    .text-indicator {
      font-size: var(--font-size-xs);
      font-weight: 500;
      color: var(--primary-400);
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    &:not(.connected) {
      .text-indicator {
        opacity: 0;
      }
    }
  }

  .actions-nav {
    display: flex;
    gap: var(--radius-md);
    padding: var(--radius-sm);
  }
}

.actions-nav {
  background: var(--Neutral-5);
  border: 1px solid var(--Neutral-30);
  border-radius: 27px;
  display: inline-flex;
  gap: 12px;
  align-items: center;
  overflow: clip;
  padding: 10px;

  transition: all 0.6s ease-in;

  &>* {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 1rem;
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--error-500);
  }
  70% {
    box-shadow: 0 0 0 10px transparent;
  }
  100% {
    box-shadow: 0 0 0 0 transparent;
  }
}
