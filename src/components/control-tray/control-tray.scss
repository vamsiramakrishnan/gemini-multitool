@import '../../styles/shared/mixins';
@import '../../styles/shared/layout-mixins';

.action-button {
  @include retro-button-icon;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, rgba(255,255,255,0.1) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  &:hover::after {
    opacity: 1;
  }
  
  &.connected {
    @include retro-button-success;
    box-shadow: 0 0 12px rgba($retro-green, 0.4),
                inset 0 0 8px rgba($retro-green, 0.2);
    transform: scale(1.02);
  }

  &.error {
    @include retro-button-danger;
    box-shadow: 0 0 12px rgba($retro-red, 0.4),
                inset 0 0 8px rgba($retro-red, 0.2);
    animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
  }

  &.loading {
    pointer-events: none;
    position: relative;
    backdrop-filter: blur(4px);
    
    .loading-indicator {
      position: absolute;
      inset: 4px;
      border: 2px solid rgba($retro-blue, 0.15);
      border-top-color: $retro-blue;
      border-radius: 50%;
      animation: spin 1.2s cubic-bezier(0.4, 0, 0.2, 1) infinite;
    }
  }
}

@property --volume {
  syntax: "<length>";
  inherit: false;
  initial-value: 0px;
}

.disabled .mic-button,
.mic-button.disabled {
  &:before {
    background: rgba(0, 0, 0, 0);
  }
}

.mic-button {
  @include retro-button-icon;
  transition: transform 0.2s ease, box-shadow 0.3s ease;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    opacity: 0;
    background: radial-gradient(circle, rgba($retro-pink, 0.2) 0%, rgba($retro-pink, 0) 70%);
    transition: opacity 0.3s ease;
  }
  
  &:hover::before {
    opacity: 0.4;
  }
  
  &.active {
    animation: pulse 2s infinite;
    transform: scale(1.05);
  }
  
  &.muted {
    @include retro-button-danger;
    box-shadow: 0 0 12px rgba($retro-red, 0.3);
  }
}

.connect-toggle {
  @include retro-button-primary;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  order: -1;
  
  &.connected {
    @include retro-button-danger;
    background: rgba($retro-red, 0.9);
    
    &:hover {
      background: rgba($retro-red, 1);
      transform: scale(1.05);
      box-shadow: 0 0 16px rgba($retro-red, 0.4);
    }
    
    .material-symbols-outlined {
      animation: pulse 2s infinite;
      color: white;
      text-shadow: 0 0 8px rgba(255, 255, 255, 0.4);
    }
  }
  
  &:not(.connected) {
    &:hover {
      background: rgba($retro-green, 0.9);
      transform: scale(1.05);
      box-shadow: 0 0 16px rgba($retro-green, 0.4);
    }
  }
}

.control-tray {
  @include control-tray-base;
  position: relative;
  z-index: 100;
  backdrop-filter: blur(12px);
  background: rgba(255, 255, 255, 0.08);
  box-shadow: 
    0 4px 24px rgba(0, 0, 0, 0.1),
    0 1px 2px rgba(255, 255, 255, 0.05);
  border: 1px solid rgba($retro-blue, 0.12);
  border-radius: 16px;
  padding: var(--space-sm);
  display: flex;
  align-items: center;
  gap: var(--space-md);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  
  &.chat-visible {
    opacity: 0.85;
    pointer-events: none;
    filter: grayscale(0.3) blur(1px);
    transform: scale(0.98);
  }
  
  .controls-group {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    padding: var(--space-xs);
    transition: all 0.3s ease;
    
    &.left {
      min-width: 200px;
      justify-content: flex-start;
      
      .action-button {
        margin-right: var(--space-xs);
        transform-origin: left center;
      }
    }
    
    &.center {
      flex: 2;
      justify-content: center;
      gap: var(--space-md);
      
      .action-button {
        margin: 0 var(--space-xxs);
        transform-origin: center;
      }
    }
    
    &.right {
      min-width: 200px;
      justify-content: flex-end;
      
      .action-button {
        margin-left: var(--space-xs);
        transform-origin: right center;
      }
    }
  }

  .connection-container {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    padding: var(--space-xxs) var(--space-xs);
    transition: transform 0.3s ease;

    &:hover {
      transform: translateY(-1px);
    }

    .text-indicator {
      font-family: var(--font-ui);
      color: $retro-blue;
      font-size: var(--font-size-sm);
      min-width: 80px;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      font-weight: 500;
      letter-spacing: 0.5px;
      text-shadow: 0 0 12px rgba($retro-blue, 0.25);
      opacity: 0.9;
      
      &:hover {
        opacity: 1;
        transform: scale(1.02);
      }
    }

    &.connected .text-indicator {
      color: $retro-green;
      text-shadow: 0 0 12px rgba($retro-green, 0.25);
    }
  }

  .actions-nav {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    padding: var(--space-xxs) var(--space-xs);
    flex: 1;
    transition: opacity 0.3s ease, filter 0.3s ease;

    &.disabled {
      opacity: 0.5;
      pointer-events: none;
      filter: grayscale(0.5);
    }

    .action-button {
      position: relative;
      width: 42px;
      height: 42px;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      
      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba($retro-blue, 0.2);
      }
      
      &:active {
        transform: translateY(1px);
        box-shadow: 0 2px 6px rgba($retro-blue, 0.1);
      }

      &.active {
        @include retro-button-primary;
        animation: subtle-pulse 2s infinite;
      }

      &.error {
        @include retro-button-danger;
        animation: shake 0.5s ease;
      }

      &.mic-button {
        &.muted {
          @include retro-button-danger;
          &::before {
            content: '';
            position: absolute;
            inset: 0;
            background: radial-gradient(circle, rgba($retro-red, 0.2) 0%, transparent 70%);
            animation: pulse 2s infinite;
          }
        }
      }
    }
  }
}

@keyframes pulse {
  0% { 
    box-shadow: 0 0 0 0 rgba($retro-pink, 0.6);
  }
  70% { 
    box-shadow: 0 0 0 15px rgba($retro-pink, 0);
  }
  100% { 
    box-shadow: 0 0 0 0 rgba($retro-pink, 0);
  }
}

@keyframes subtle-pulse {
  0% {
    box-shadow: 0 0 8px rgba($retro-blue, 0.3);
  }
  50% {
    box-shadow: 0 0 16px rgba($retro-blue, 0.4);
  }
  100% {
    box-shadow: 0 0 8px rgba($retro-blue, 0.3);
  }
}

.action-button:not(.disabled):hover {
  animation: subtle-pulse 1.5s infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes shake {
  10%, 90% { transform: translateX(-1px); }
  20%, 80% { transform: translateX(2px); }
  30%, 50%, 70% { transform: translateX(-3px); }
  40%, 60% { transform: translateX(3px); }
}

@media (max-width: 768px) {
  .control-tray {
    padding: var(--space-xs);
    
    .controls-group {
      gap: var(--space-xs);
      
      &.left, &.right {
        min-width: auto;
      }
      
      &.center {
        gap: var(--space-xs);
      }
    }

    .actions-nav {
      gap: var(--space-xxs);
      
      .action-button {
        width: 38px;
        height: 38px;
      }
    }
  }
}

@media (max-width: 1024px) and (min-width: 769px) {
  .control-tray {
    .controls-group {
      &.left, &.right {
        min-width: 160px;
      }
    }
    
    .actions-nav {
      gap: var(--space-xs);
    }
  }
}
