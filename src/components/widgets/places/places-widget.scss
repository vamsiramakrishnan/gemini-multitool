@import '../../../styles/shared/mixins';
@import '../../../styles/shared/design-system';
@import '../../../styles/shared/_layout-mixins';
@import '../../../styles/shared/_animations';
@import '../../../styles/shared/_widget-base';

/* Add your styles for places widget here */ 
.places-widget {
  @include widget-base;
  @include widget-content-styles;
  @include crt-glow($retro-blue);
  @include scanlines;
  @include crt-texture;

  container-name: places-widget;
  container-type: inline-size;

  .places-content {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-md);
  }

  &.widget-minimized {
    .places-header {
      padding: var(--space-sm);
      .search-container {
        display: none; // Hide search in minimized state
      }
      .filter-controls {
        justify-content: flex-end; // Align filters to the end
      }
    }
    .places-content {
      display: none; // Hide content in minimized state
    }
    .places-empty,
    .places-loading {
      display: none; // Hide empty/loading states when minimized
    }
  }

  .places-header {
    @include widget-header;
    @include cyber-header;
    padding: var(--space-md);
    border-bottom: var(--terminal-line);
    background: rgba($retro-black, 0.7);

    .search-container {
      @include cyber-input;
      position: relative;
      margin-bottom: var(--space-md);

      input {
        width: 100%;
        padding-left: calc(var(--space-md) + 24px);
        
        &:focus {
          @include holographic-focus;
        }
      }

      .search-icon {
        @include retro-icon-container($retro-blue);
        position: absolute;
        left: var(--space-sm);
        top: 50%;
        transform: translateY(-50%);
      }
    }

    .filter-controls {
      @include responsive-grid(120px);
      gap: var(--space-xs);

      button {
        @include retro-button;
        @include holographic-hover($retro-blue);
        
        &.active {
          @include neon-panel($retro-pink, 'dashed');
        }
      }
    }
  }

  .places-main {
    @include widget-content;
    @include crt-screen-border;
    
    .map-section {
      height: 300px;
      border-bottom: var(--terminal-line);
      position: relative;
      overflow: hidden;

      @include holographic-grid($retro-blue);
    }

    .places-grid {
      @include responsive-grid(280px);
      padding: var(--space-lg);
      background: rgba($retro-black, 0.3);

      .place-card {
        @include widget-card;
        @include retro-glow-hover;
        @include neon-panel($retro-blue);
        
        &:hover {
          @include holographic-hover($retro-pink);
          
          .place-photo img {
            transform: scale(1.05);
          }
        }

        .place-photo {
          position: relative;
          height: 200px;
          overflow: hidden;

          img {
            @include data-stream-animation;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease-in-out;
          }

          .rating-badge {
            @include cyber-badge($retro-blue);
            position: absolute;
            top: var(--space-sm);
            right: var(--space-sm);
          }

          .status-badge {
            @include cyber-badge($retro-green);
            position: absolute;
            bottom: var(--space-sm);
            left: var(--space-sm);
            
            &.closed {
              @include cyber-badge($retro-red);
            }
          }
        }

        .place-details {
          padding: var(--space-md);

          .place-name {
            @include cyber-heading(4);
            @include neon-text-glow($retro-blue);
            font-size: var(--font-size-lg);
          }

          .place-address {
            @include retro-icon-with-text;
            margin: var(--space-sm) 0;
            font-size: var(--font-size-sm);
          }

          .place-categories {
            @include stack('xs', 'horizontal');
            flex-wrap: wrap;

            .category-tag {
              @include cyber-badge($retro-blue);
              
              &:hover {
                @include holographic-hover($retro-pink);
              }
            }
          }

          .place-actions {
            @include stack('sm', 'horizontal');
            margin-top: var(--space-md);

            button {
              @include retro-button;
              flex: 1;

              &.directions {
                @include retro-button-primary;
              }
            }
          }
        }
      }
    }
  }

  // Loading state
  &.loading {
    @include widget-loading;
  }

  // Empty state
  &.empty {
    @include widget-empty;
  }

  // Error state
  &.error {
    @include widget-error;
  }

  // Responsive styles
  @container places-widget (max-width: 600px) {
    .places-header {
      .filter-controls {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }

  .search-section {
    .filter-tags {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-xs);
      margin-top: var(--space-sm);

      .filter-tag {
        @include retro-button-base;
        display: flex;
        align-items: center;
        gap: var(--space-xs);
        padding: var(--space-xs) var(--space-sm);
        background: rgba($retro-black, 0.3);
        border: 1px solid rgba($retro-blue, 0.2);
        border-radius: var(--radius-sm);
        color: rgba($retro-blue, 0.7);
        font-size: var(--font-size-xs);
        transition: var(--hover-transition);

        .material-symbols-outlined {
          font-size: 16px;
        }

        &:hover {
          border-color: $retro-pink;
          color: $retro-pink;
          background: rgba($retro-black, 0.4);
          transform: translateY(-1px);
        }

        &.active {
          background: rgba($retro-blue, 0.1);
          border-color: $retro-blue;
          color: $retro-blue;
          box-shadow: var(--terminal-glow);
        }
      }
    }
  }
}

// Animations
@keyframes spin {
  to { transform: rotate(360deg); }
} 